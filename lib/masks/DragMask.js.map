{"version":3,"file":"DragMask.js","sourceRoot":"","sources":["../../src/masks/DragMask.tsx"],"names":[],"mappings":";;;;;;;;;;;;IAAA,6BAA+B;IAG/B,uCAAkC;IAWlC,SAAwB,QAAQ,CAAC,EAAiD;YAA/C,oCAAe,EAAE,gDAAqB;QAC/D,IAAA,uCAAU,EAAE,yBAAG,EAAE,+BAAM,CAAqB;QACpD,IAAI,MAAM,KAAK,UAAU;YAAE,OAAO,IAAI,CAAC;QAEvC,IAAM,iBAAiB,GAAG,MAAM,GAAG,UAAU,CAAC;QAC9C,IAAM,WAAW,GAAG,iBAAiB,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;QAChE,IAAM,SAAS,GAAG,iBAAiB,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;QAC9D,IAAM,SAAS,GAAG,iBAAiB,CAAC,CAAC,CAAC,mCAAmC,CAAC,CAAC,CAAC,iCAAiC,CAAC;QAE9G,IAAM,UAAU,GAAG,qBAAqB,CAAC,EAAE,GAAG,KAAA,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;QACvE,KAAK,IAAI,aAAa,GAAG,WAAW,GAAG,CAAC,EAAE,aAAa,IAAI,SAAS,EAAE,aAAa,EAAE,EAAE;YAC7E,IAAA,0EAAM,CAA2D;YACzE,UAAU,CAAC,MAAM,IAAI,MAAM,CAAC;SAC7B;QAED,OAAO,CACL,oBAAC,kBAAQ,uBAAK,UAAU,IAAE,SAAS,EAAE,SAAS,IAAI,CACnD,CAAC;IACJ,CAAC;IAlBD,2BAkBC","sourcesContent":["import * as React from 'react';\n\nimport { Position, Dimension } from '../common/types';\nimport CellMask from './CellMask';\n\nexport interface DraggedPosition extends Position {\n  overRowIdx: number;\n}\n\ninterface Props {\n  draggedPosition: DraggedPosition;\n  getSelectedDimensions(position: Position): Dimension;\n}\n\nexport default function DragMask({ draggedPosition, getSelectedDimensions }: Props) {\n  const { overRowIdx, idx, rowIdx } = draggedPosition;\n  if (rowIdx === overRowIdx) return null;\n\n  const isDraggedOverDown = rowIdx < overRowIdx;\n  const startRowIdx = isDraggedOverDown ? rowIdx + 1 : overRowIdx;\n  const endRowIdx = isDraggedOverDown ? overRowIdx : rowIdx - 1;\n  const className = isDraggedOverDown ? 'react-grid-cell-dragged-over-down' : 'react-grid-cell-dragged-over-up';\n\n  const dimensions = getSelectedDimensions({ idx, rowIdx: startRowIdx });\n  for (let currentRowIdx = startRowIdx + 1; currentRowIdx <= endRowIdx; currentRowIdx++) {\n    const { height } = getSelectedDimensions({ idx, rowIdx: currentRowIdx });\n    dimensions.height += height;\n  }\n\n  return (\n    <CellMask {...dimensions} className={className} />\n  );\n}\n"]}