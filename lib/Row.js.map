{"version":3,"file":"Row.js","sourceRoot":"","sources":["../src/Row.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport rowComparer from './common/utils/RowComparer';\nimport Cell from './Cell';\nimport { isFrozen } from './ColumnUtils';\nimport { RowRenderer, RowRendererProps, CellRenderer, CellRendererProps, CalculatedColumn } from './common/types';\n\nexport default class Row extends React.Component<RowRendererProps> implements RowRenderer {\n  static displayName = 'Row';\n\n  static defaultProps = {\n    cellRenderer: Cell,\n    isSelected: false,\n    height: 35\n  };\n\n  private readonly row = React.createRef<HTMLDivElement>();\n  private readonly cells = new Map<string, CellRenderer>();\n\n  shouldComponentUpdate(nextProps: RowRendererProps) {\n    return rowComparer(nextProps, this.props);\n  }\n\n  handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    // Prevent default to allow drop\n    e.preventDefault();\n    const { idx, cellMetaData } = this.props;\n    cellMetaData.onDragEnter(idx);\n  };\n\n  handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'copy';\n  };\n\n  handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    // The default in Firefox is to treat data in dataTransfer as a URL and perform navigation on it, even if the data type used is 'text'\n    // To bypass this, we need to capture and prevent the drop event.\n    e.preventDefault();\n  };\n\n  getCell(column: CalculatedColumn) {\n    const Renderer = this.props.cellRenderer;\n    const { idx, cellMetaData, isScrolling, row, isSelected, scrollLeft, lastFrozenColumnIndex } = this.props;\n    const { key } = column;\n\n    const cellProps: CellRendererProps & { ref: (cell: CellRenderer | null) => void } = {\n      ref: (cell) => cell ? this.cells.set(key, cell) : this.cells.delete(key),\n      idx: column.idx,\n      rowIdx: idx,\n      height: this.getRowHeight(),\n      column,\n      cellMetaData,\n      value: this.getCellValue(key || String(column.idx)), // TODO: fix idx type\n      rowData: row,\n      isRowSelected: isSelected,\n      expandableOptions: this.getExpandableOptions(key),\n      isScrolling,\n      scrollLeft,\n      lastFrozenColumnIndex\n    };\n\n    return <Renderer key={`${key}-${idx}`} {...cellProps} />;\n  }\n\n  getCells() {\n    const { colOverscanStartIdx, colOverscanEndIdx, columns } = this.props;\n    const frozenColumns = columns.filter(c => isFrozen(c));\n    const nonFrozenColumn = columns.slice(colOverscanStartIdx, colOverscanEndIdx + 1).filter(c => !isFrozen(c));\n    return nonFrozenColumn.concat(frozenColumns).map(c => this.getCell(c));\n  }\n\n  getRowTop(): number {\n    const { current } = this.row;\n    return current ? current.offsetTop : 0;\n  }\n\n  getRowHeight(): number {\n    return this.props.height;\n  }\n\n  getCellValue(key: string) {\n    const { isSelected, row } = this.props;\n    if (key === 'select-row') {\n      return isSelected;\n    }\n\n    if (typeof row.get === 'function') {\n      return row.get(key);\n    }\n\n    return row[key];\n  }\n\n  getExpandableOptions(columnKey: string) {\n    const { subRowDetails } = this.props;\n    if (!subRowDetails) return;\n\n    const { field, expanded, children, treeDepth } = subRowDetails;\n    return {\n      canExpand: field === columnKey && ((children && children.length > 0) || subRowDetails.group === true),\n      field,\n      expanded,\n      children,\n      treeDepth,\n      subRowDetails\n    };\n  }\n\n  setScrollLeft(scrollLeft: number) {\n    for (const column of this.props.columns) {\n      const { key } = column;\n      if (isFrozen(column) && this.cells.has(key)) {\n        this.cells.get(key)!.setScrollLeft(scrollLeft);\n      }\n    }\n  }\n\n  render() {\n    const className = classNames(\n      'react-grid-Row',\n      `react-grid-Row--${this.props.idx % 2 === 0 ? 'even' : 'odd'}`,\n      { 'row-selected': this.props.isSelected },\n      this.props.extraClasses,\n      { 'rdg-scrolling': this.props.isScrolling }\n    );\n\n    return (\n      <div\n        ref={this.row}\n        className={className}\n        style={{ height: this.getRowHeight() }}\n        onDragEnter={this.handleDragEnter}\n        onDragOver={this.handleDragOver}\n        onDrop={this.handleDrop}\n      >\n        {this.getCells()}\n      </div>\n    );\n  }\n}\n"]}