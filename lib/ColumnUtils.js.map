{"version":3,"file":"ColumnUtils.js","sourceRoot":"","sources":["../src/ColumnUtils.ts"],"names":[],"mappings":"AAGA,MAAM,UAAU,OAAO,CAAI,OAAgC;IACzD,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QAC1B,OAAO,OAAO,CAAC,MAAM,CAAC;KACvB;IAED,OAAO,OAAO,CAAC,IAAI,CAAC;AACtB,CAAC;AAED,6EAA6E;AAC7E,uEAAuE;AACvE,MAAM,UAAU,OAAO,CAAC,MAAwB,EAAE,OAAgB,EAAE,gBAA0B;IAC5F,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,UAAU,EAAE;QACzC,OAAO,gBAAgB,KAAK,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;KAC9D;IACD,OAAO,gBAAgB,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC7E,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,MAAiC;IACxD,OAAO,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC;AAChC,CAAC","sourcesContent":["import Immutable from 'immutable';\nimport { Column, CalculatedColumn, RowData } from './common/types';\n\nexport function getSize<T>(columns: T[] | Immutable.List<T>): number {\n  if (Array.isArray(columns)) {\n    return columns.length;\n  }\n\n  return columns.size;\n}\n\n// Logic extented to allow for functions to be passed down in column.editable\n// this allows us to deicde whether we can be editing from a cell level\nexport function canEdit(column: CalculatedColumn, rowData: RowData, enableCellSelect?: boolean): boolean {\n  if (typeof column.editable === 'function') {\n    return enableCellSelect === true && column.editable(rowData);\n  }\n  return enableCellSelect === true && (!!column.editor || !!column.editable);\n}\n\nexport function isFrozen(column: Column | CalculatedColumn): boolean {\n  return column.frozen === true;\n}\n"]}