{"version":3,"file":"HeaderCell.js","sourceRoot":"","sources":["../src/HeaderCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { isElement } from 'react-is';\nimport { isFrozen } from './ColumnUtils';\nimport { HeaderRowType } from './common/enums';\nimport { CalculatedColumn } from './common/types';\n\nfunction SimpleCellRenderer({ column, rowType }: { column: CalculatedColumn; rowType: HeaderRowType }) {\n  const headerText = rowType === HeaderRowType.HEADER ? column.name : '';\n  return <div>{headerText}</div>;\n}\n\ninterface Props {\n  renderer?: CalculatedColumn['headerRenderer'];\n  column: CalculatedColumn;\n  rowType: HeaderRowType;\n  height: number;\n  onResize(column: CalculatedColumn, width: number): void;\n  onResizeEnd(column: CalculatedColumn, width: number): void;\n  onHeaderDrop?(): void;\n  draggableHeaderCell?: React.ComponentType<{ column: CalculatedColumn; onHeaderDrop(): void }>;\n  className?: string;\n}\n\nexport default class HeaderCell extends React.Component<Props> {\n  private readonly cell = React.createRef<HTMLDivElement>();\n\n  private onMouseDown = (event: React.MouseEvent) => {\n    if (event.button !== 0) {\n      return;\n    }\n\n    const { right } = event.currentTarget.getBoundingClientRect();\n    const offset = right - event.clientX;\n\n    if (offset > 11) { // +1px to account for the border size\n      return;\n    }\n\n    const onMouseMove = (event: MouseEvent) => {\n      this.onResize(event.clientX + offset);\n    };\n\n    const onMouseUp = (event: MouseEvent) => {\n      window.removeEventListener('mousemove', onMouseMove);\n      window.removeEventListener('mouseup', onMouseUp);\n      this.onResizeEnd(event.clientX + offset);\n    };\n\n    event.preventDefault();\n    window.addEventListener('mousemove', onMouseMove);\n    window.addEventListener('mouseup', onMouseUp);\n  };\n\n  private onTouchStart = (event: React.TouchEvent) => {\n    const touch = event.changedTouches[0];\n    const { identifier } = touch;\n    const { right } = event.currentTarget.getBoundingClientRect();\n    const offset = right - touch.clientX;\n\n    if (offset > 11) { // +1px to account for the border size\n      return;\n    }\n\n    function getTouch(event: TouchEvent) {\n      for (const touch of event.changedTouches) {\n        if (touch.identifier === identifier) return touch;\n      }\n      return null;\n    }\n\n    const onTouchMove = (event: TouchEvent) => {\n      const touch = getTouch(event);\n      if (touch) {\n        this.onResize(touch.clientX + offset);\n      }\n    };\n\n    const onTouchEnd = (event: TouchEvent) => {\n      const touch = getTouch(event);\n      if (!touch) return;\n      window.removeEventListener('touchmove', onTouchMove);\n      window.removeEventListener('touchend', onTouchEnd);\n      this.onResizeEnd(touch.clientX + offset);\n    };\n\n    window.addEventListener('touchmove', onTouchMove);\n    window.addEventListener('touchend', onTouchEnd);\n  };\n\n  private onResize(x: number) {\n    const { onResize } = this.props;\n    if (onResize) {\n      const width = this.getWidthFromMouseEvent(x);\n      if (width > 0) {\n        onResize(this.props.column, width);\n      }\n    }\n  }\n\n  private onResizeEnd(x: number) {\n    const width = this.getWidthFromMouseEvent(x);\n    this.props.onResizeEnd(this.props.column, width);\n  }\n\n  private getWidthFromMouseEvent(x: number): number {\n    return x - this.cell.current!.getBoundingClientRect().left;\n  }\n\n  getCell() {\n    const { height, column, rowType } = this.props;\n    const renderer = this.props.renderer || SimpleCellRenderer;\n    if (isElement(renderer)) {\n      // if it is a string, it's an HTML element, and column is not a valid property, so only pass height\n      if (typeof renderer.type === 'string') {\n        return React.cloneElement(renderer, { height });\n      }\n      return React.cloneElement(renderer, { column, height });\n    }\n    return React.createElement(renderer, { column, rowType });\n  }\n\n  setScrollLeft(scrollLeft: number) {\n    const node = this.cell.current;\n    if (node) {\n      node.style.transform = `translateX(${scrollLeft}px)`;\n    }\n  }\n\n  removeScroll() {\n    const node = this.cell.current;\n    if (node) {\n      node.style.transform = null;\n    }\n  }\n\n  render() {\n    const { column, rowType, height } = this.props;\n\n    const className = classNames('react-grid-HeaderCell', {\n      'rdg-header-cell-resizable': column.resizable,\n      'react-grid-HeaderCell--frozen': isFrozen(column)\n    }, this.props.className, column.cellClass);\n\n    const style: React.CSSProperties = {\n      width: column.width,\n      left: column.left,\n      height\n    };\n\n    const cell = (\n      <div\n        className={className}\n        style={style}\n        ref={this.cell}\n        onMouseDown={column.resizable ? this.onMouseDown : undefined}\n        onTouchStart={column.resizable ? this.onTouchStart : undefined}\n      >\n        {this.getCell()}\n      </div>\n    );\n\n    const DraggableHeaderCell = this.props.draggableHeaderCell;\n    if (rowType === HeaderRowType.HEADER && column.draggable && DraggableHeaderCell) {\n      return (\n        <DraggableHeaderCell\n          column={column}\n          onHeaderDrop={this.props.onHeaderDrop!}\n        >\n          {cell}\n        </DraggableHeaderCell>\n      );\n    }\n\n    return cell;\n  }\n}\n"]}