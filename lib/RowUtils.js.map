{"version":3,"file":"RowUtils.js","sourceRoot":"","sources":["../src/RowUtils.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,GAAG,CAAC,GAAY,EAAE,QAAgB;IAChD,IAAI,OAAO,GAAG,CAAC,GAAG,KAAK,UAAU,EAAE;QACjC,OAAO,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;KAC1B;IAED,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;AACvB,CAAC;AAOD,MAAM,UAAU,aAAa,CAC3B,IAAkB,EAClB,OAAyB,EACzB,aAA6B,EAC7B,OAAW,EACX,MAAe;IAEf,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QACxD,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KACjC;IAED,IAAI,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;QAChE,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAW,CAAkB,CAAC,CAAC;KACzE;IAED,IAAI,OAAO,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;QAChD,OAAO,CAAC,CAAC,OAAO,CAAC,aAAkB,CAAC,CAAC;KACtC;IAED,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import { RowData } from './common/types';\n\nexport function get(row: RowData, property: string) {\n  if (typeof row.get === 'function') {\n    return row.get(property);\n  }\n\n  return row[property];\n}\n\ninterface Keys {\n  rowKey?: string;\n  values?: string[];\n}\n\nexport function isRowSelected<T, K extends keyof T>(\n  keys?: Keys | null,\n  indexes?: number[] | null,\n  isSelectedKey?: string | null,\n  rowData?: T,\n  rowIdx?: number\n): boolean {\n  if (Array.isArray(indexes) && typeof rowIdx === 'number') {\n    return indexes.includes(rowIdx);\n  }\n\n  if (rowData && keys && keys.rowKey && Array.isArray(keys.values)) {\n    return keys.values.includes(rowData[keys.rowKey as K] as any as string);\n  }\n\n  if (rowData && typeof isSelectedKey === 'string') {\n    return !!rowData[isSelectedKey as K];\n  }\n\n  return false;\n}\n"]}