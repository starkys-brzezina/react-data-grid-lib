{"version":3,"file":"ToolbarContainer.js","sourceRoot":"","sources":["../src/ToolbarContainer.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAQzD,MAAM,CAAC,OAAO,UAAU,gBAAgB,CAAC,EAAsE;QAApE,oBAAO,EAAE,oBAAO,EAAE,wBAAS,EAAE,kCAAc;IACpF,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,IAAI,CAAC;KACb;IAED,IAAM,YAAY,GAAG,EAAE,OAAO,SAAA,EAAE,cAAc,gBAAA,EAAE,SAAS,WAAA,EAAE,CAAC;IAE5D,IAAI,SAAS,CAAC,OAAO,CAAC,EAAE;QACtB,OAAO,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;KAClD;IAED,IAAI,kBAAkB,CAAC,OAAO,CAAC,EAAE;QAC/B,OAAO,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;KACnD;IAED,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import * as React from 'react';\nimport { isElement, isValidElementType } from 'react-is';\nimport { ToolbarProps } from './common/types';\n\nexport interface ToolbarContainerProps extends ToolbarProps {\n  /** Component used to render toolbar above the grid */\n  toolbar?: React.ReactElement<ToolbarProps> | React.ComponentType<ToolbarProps>;\n}\n\nexport default function ToolbarContainer({ toolbar, columns, rowsCount, onToggleFilter }: ToolbarContainerProps) {\n  if (!toolbar) {\n    return null;\n  }\n\n  const toolBarProps = { columns, onToggleFilter, rowsCount };\n\n  if (isElement(toolbar)) {\n    return React.cloneElement(toolbar, toolBarProps);\n  }\n\n  if (isValidElementType(toolbar)) {\n    return React.createElement(toolbar, toolBarProps);\n  }\n\n  return null;\n}\n"]}