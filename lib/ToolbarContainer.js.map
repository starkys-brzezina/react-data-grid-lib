{"version":3,"file":"ToolbarContainer.js","sourceRoot":"","sources":["../src/ToolbarContainer.tsx"],"names":[],"mappings":";;;;;;;;;;;IAAA,6BAA+B;IAC/B,qCAAyD;IAQzD,SAAwB,gBAAgB,CAAC,EAAsE;YAApE,oBAAO,EAAE,oBAAO,EAAE,wBAAS,EAAE,kCAAc;QACpF,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,IAAI,CAAC;SACb;QAED,IAAM,YAAY,GAAG,EAAE,OAAO,SAAA,EAAE,cAAc,gBAAA,EAAE,SAAS,WAAA,EAAE,CAAC;QAE5D,IAAI,oBAAS,CAAC,OAAO,CAAC,EAAE;YACtB,OAAO,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;SAClD;QAED,IAAI,6BAAkB,CAAC,OAAO,CAAC,EAAE;YAC/B,OAAO,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;SACnD;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAhBD,mCAgBC","sourcesContent":["import * as React from 'react';\nimport { isElement, isValidElementType } from 'react-is';\nimport { ToolbarProps } from './common/types';\n\nexport interface ToolbarContainerProps extends ToolbarProps {\n  /** Component used to render toolbar above the grid */\n  toolbar?: React.ReactElement<ToolbarProps> | React.ComponentType<ToolbarProps>;\n}\n\nexport default function ToolbarContainer({ toolbar, columns, rowsCount, onToggleFilter }: ToolbarContainerProps) {\n  if (!toolbar) {\n    return null;\n  }\n\n  const toolBarProps = { columns, onToggleFilter, rowsCount };\n\n  if (isElement(toolbar)) {\n    return React.cloneElement(toolbar, toolBarProps);\n  }\n\n  if (isValidElementType(toolbar)) {\n    return React.createElement(toolbar, toolBarProps);\n  }\n\n  return null;\n}\n"]}