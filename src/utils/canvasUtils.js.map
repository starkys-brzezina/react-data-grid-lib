{"version":3,"file":"canvasUtils.js","sourceRoot":"","sources":["canvasUtils.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,8CAA0C;IAG1C,SAAgB,uBAAuB,CAAC,OAA2B,EAAE,GAAW,EAAE,iBAAyB,EAAE,kBAA0B;QACrI,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,MAAM,GAAG,CAAC,CAAC;QAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC5B,IAAM,MAAM,GAAqB,OAAO,CAAC,CAAC,CAAC,CAAC;YAC5C,IAAI,MAAM,EAAE;gBACV,IAAI,MAAM,CAAC,KAAK,EAAE;oBAChB,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC;iBACtB;gBACD,IAAI,sBAAQ,CAAC,MAAM,CAAC,EAAE;oBACpB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC;iBACxB;aACF;SACF;QAED,IAAM,cAAc,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QACpC,IAAI,cAAc,EAAE;YAClB,IAAM,UAAU,GAAG,IAAI,GAAG,MAAM,GAAG,iBAAiB,CAAC;YACrD,IAAM,WAAW,GAAG,IAAI,GAAG,cAAc,CAAC,KAAK,GAAG,iBAAiB,CAAC;YAEpE,IAAI,UAAU,GAAG,CAAC,EAAE;gBAClB,OAAO,UAAU,CAAC;aACnB;YACD,IAAI,WAAW,GAAG,kBAAkB,EAAE;gBACpC,OAAO,WAAW,GAAG,kBAAkB,CAAC;aACzC;SACF;QAED,OAAO,CAAC,CAAC;IACX,CAAC;IA9BD,0DA8BC","sourcesContent":["import { isFrozen } from '../ColumnUtils';\nimport { CalculatedColumn } from '../common/types';\n\nexport function getColumnScrollPosition(columns: CalculatedColumn[], idx: number, currentScrollLeft: number, currentClientWidth: number): number {\n  let left = 0;\n  let frozen = 0;\n\n  for (let i = 0; i < idx; i++) {\n    const column: CalculatedColumn = columns[i];\n    if (column) {\n      if (column.width) {\n        left += column.width;\n      }\n      if (isFrozen(column)) {\n        frozen += column.width;\n      }\n    }\n  }\n\n  const selectedColumn = columns[idx];\n  if (selectedColumn) {\n    const scrollLeft = left - frozen - currentScrollLeft;\n    const scrollRight = left + selectedColumn.width - currentScrollLeft;\n\n    if (scrollLeft < 0) {\n      return scrollLeft;\n    }\n    if (scrollRight > currentClientWidth) {\n      return scrollRight - currentClientWidth;\n    }\n  }\n\n  return 0;\n}\n"]}