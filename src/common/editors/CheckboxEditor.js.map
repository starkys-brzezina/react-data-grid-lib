{"version":3,"file":"CheckboxEditor.js","sourceRoot":"","sources":["CheckboxEditor.tsx"],"names":[],"mappings":";;;;;;;;;;;IAAA,6BAA+B;IAU/B,SAAwB,cAAc,CAAC,EAA+D;YAA7D,gBAAK,EAAE,kBAAM,EAAE,kBAAM,EAAE,oCAAe;QAC7E,SAAS,YAAY,CAAC,KAA0C;YAC9D,IAAI,MAAM,CAAC,YAAY,EAAE;gBACvB,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;aACjE;QACH,CAAC;QAED,OAAO,CACL,+BAAO,SAAS,EAAC,8CAA8C;YAC7D,+BACE,IAAI,EAAC,UAAU,EACf,SAAS,EAAC,qBAAqB,EAC/B,QAAQ,EAAE,YAAY,EACtB,OAAO,EAAE,KAAK,KAAK,IAAI,GACvB;YACF,8BAAM,SAAS,EAAC,2BAA2B,GAAG,CACxC,CACT,CAAC;IACJ,CAAC;IAlBD,iCAkBC","sourcesContent":["import * as React from 'react';\nimport { CalculatedColumn } from '../types';\n\nexport interface CheckboxEditorProps {\n  value?: boolean;\n  rowIdx: number;\n  column: CalculatedColumn;\n  dependentValues: any;\n}\n\nexport default function CheckboxEditor({ value, rowIdx, column, dependentValues }: CheckboxEditorProps) {\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    if (column.onCellChange) {\n      column.onCellChange(rowIdx, column.key, dependentValues, event);\n    }\n  }\n\n  return (\n    <label className=\"react-grid-checkbox-container checkbox-align\">\n      <input\n        type=\"checkbox\"\n        className=\"react-grid-checkbox\"\n        onChange={handleChange}\n        checked={value === true}\n      />\n      <span className=\"react-grid-checkbox-label\" />\n    </label>\n  );\n}\n"]}